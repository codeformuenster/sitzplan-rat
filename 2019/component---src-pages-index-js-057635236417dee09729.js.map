{"version":3,"sources":["webpack:///./src/components/sitz.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["SitzPopup","React","memo","_ref","label","sitz_id","partei","react_default","a","createElement","Fragment","umd_default","src","Sitz","_ref2","url","split","Tippy","arrow","content","className","cn","href","target","rel","IndexPage","props","_this","_Component","call","this","onSitzClick","sitzKey","newGrid","concat","state","grid","rowLoop","row","rows","col","columns","key","newColumn","Object","assign","showPopup","setState","maxRow","maxCol","data","allSitzeYaml","edges","forEach","node","column","Array","isArray","img_url","img_url_id","_renderElements","elements","sitz","push","components_sitz","render","layout","seo","title","keywords","style","gridTemplateColumns","gridTemplateRows","Component","query","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","property","author","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","Layout","header","_755544856"],"mappings":"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","file":"component---src-pages-index-js-057635236417dee09729.js","sourcesContent":["import React from 'react'\nimport * as cn from 'classnames'\nimport Tippy from '@tippy.js/react'\n\nimport Img from 'react-image'\n\nimport 'tippy.js/dist/tippy.css'\n\nconst SitzPopup = React.memo(({ label, sitz_id, partei }) => (\n  <>\n    <h4>{label}</h4>\n    <p>{partei}</p>\n    <div>\n      <Img\n        src={`https://www.stadt-muenster.de/sessionnet/sessionnetbi/im/pe${sitz_id}.jpg`}\n      />\n    </div>\n  </>\n))\n\nconst Sitz = ({ url, partei, label }) => {\n  let sitz_id\n  if (typeof url === 'string') {\n    sitz_id = url.split('__kpenr=')[1]\n  }\n  return (\n    <Tippy\n      arrow={true}\n      content={<SitzPopup partei={partei} label={label} sitz_id={sitz_id} />}\n    >\n      <div className={cn('sitz', partei)}>\n        <a\n          className=\"sitz-link\"\n          href={url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {label}\n        </a>\n      </div>\n    </Tippy>\n  )\n}\n\nexport default Sitz\n","import React, { Component } from 'react'\nimport { graphql } from 'gatsby'\n\nimport Sitz from '../components/sitz'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport './sitzplan.css'\n\nexport default class IndexPage extends Component {\n  constructor(props) {\n    super(props)\n\n    const grid = []\n    let maxRow = 0,\n      maxCol = 0\n    props.data.allSitzeYaml.edges.forEach(({ node }) => {\n      const { row, column } = node\n      if (row !== null && column !== null) {\n        if (!Array.isArray(grid[column])) {\n          grid[column] = []\n        }\n\n        if (node.url) {\n          const img_url = node.url.split('__kpenr=')[1]\n          if (img_url) {\n            node.img_url_id = img_url\n          }\n        }\n\n        const key = `${column}-${row}`\n\n        grid[column][row] = {\n          ...node,\n          ...{\n            showPopup: false,\n            key,\n            // onClick: () => this.onSitzClick(key),\n          },\n        }\n\n        if (row && row > maxRow) {\n          maxRow = row\n        }\n        if (column && column > maxCol) {\n          maxCol = column\n        }\n      }\n    })\n\n    this.state = {\n      rows: maxRow,\n      columns: maxCol,\n      grid,\n    }\n  }\n\n  onSitzClick = sitzKey => {\n    const newGrid = [...this.state.grid]\n    debugger\n    rowLoop: for (let row = 0; row <= this.state.rows; row++) {\n      for (let col = 0; col <= this.state.columns; col++) {\n        if (\n          this.state.grid[col] &&\n          this.state.grid[col][row] &&\n          this.state.grid[col][row].key === sitzKey\n        ) {\n          const newColumn = [...newGrid[col]]\n          newColumn[row] = {\n            ...this.state.grid[col][row],\n            ...{\n              showPopup: !this.state.grid[col][row].showPopup,\n            },\n          }\n          newGrid[col] = newColumn\n          break rowLoop\n        }\n      }\n    }\n    this.setState({ grid: newGrid })\n  }\n\n  _renderElements() {\n    const elements = []\n    for (let row = 0; row <= this.state.rows; row++) {\n      for (let col = 0; col <= this.state.columns; col++) {\n        if (this.state.grid[col] && this.state.grid[col][row]) {\n          const sitz = this.state.grid[col][row]\n          elements.push(<Sitz {...sitz} />)\n        } else {\n          elements.push(<div key={`${col}-${row}`} />)\n        }\n      }\n    }\n    return elements\n  }\n\n  render() {\n    return (\n      <Layout>\n        <SEO title=\"Sitzplan Rat\" keywords={['muenster', 'sitzplan', 'rat']} />\n        <div\n          className=\"sitze\"\n          style={{\n            gridTemplateColumns: `repeat(${this.state.columns + 1}, 1fr)`,\n            gridTemplateRows: `repeat(${this.state.rows + 1}, 1fr)`,\n          }}\n        >\n          {this._renderElements()}\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const query = graphql`\n  {\n    allSitzeYaml {\n      edges {\n        node {\n          label\n          name\n          url\n          partei\n          row\n          column\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            padding: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}